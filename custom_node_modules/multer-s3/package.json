{
  "name": "multer-s3",
  "version": "1.4.1",
  "description": "Streaming multer storage engine for AWS S3",
  "main": "index.js",
  "scripts": {
    "test": "mocha test/bootstrap.spec.js test/**/*.spec.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/badunk/multer-s3.git"
  },
  "keywords": [
    "multer",
    "s3",
    "amazon",
    "aws"
  ],
  "author": {
    "name": "badunk"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/badunk/multer-s3/issues"
  },
  "homepage": "https://github.com/badunk/multer-s3#readme",
  "dependencies": {
    "aws-sdk": "^2.2.16",
    "file-type": "^3.3.0",
    "xtend": "^4.0.1"
  },
  "devDependencies": {
    "chai": "^3.1.0",
    "express": "^4.13.1",
    "mkdirp": "^0.5.1",
    "mocha": "^2.2.5",
    "multer": "^1.0.0",
    "rimraf": "^2.4.1",
    "s3rver": "0.0.5",
    "supertest": "^1.0.1"
  },
  "readme": "# multer-s3\nStreaming multer storage engine for AWS S3\n\nThis project is mostly an integration piece for existing code samples from Multer's [storage engine documentation](https://github.com/expressjs/multer/blob/master/StorageEngine.md) with [s3fs](https://github.com/RiptideElements/s3fs) as the substitution piece for file system.  Existing solutions I found required buffering the multipart uploads into the actual filesystem which is difficult to scale.\n\n# Install\n```\nnpm install --save multer-s3\n```\n\n# Tests\nTested with [s3rver](https://github.com/jamhall/s3rver) instead of your actual s3 credentials.  Doesn't require a real account or changing of hosts files.  Includes integration tests ensuring that it should work with express + multer.\n\n```\nnpm test\n```\n\n# Usage\n```\nvar express = require('express');\nvar app = express();\nvar multer = require('multer');\nvar s3 = require('multer-s3');\n\nvar upload = multer({\n  storage: s3({\n    dirname: 'uploads/photos',\n    bucket: 'some-bucket',\n    secretAccessKey: 'some secret',\n    accessKeyId: 'some key',\n    region: 'us-east-1',\n    filename: function (req, file, cb) {\n      cb(null, Date.now())\n    }\n  })\n})\n\napp.post('/upload', upload.array('photos', 3), function(req, res, next){\n  res.send('Successfully uploaded!');\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "multer-s3@1.4.1",
  "_from": "multer-s3@^1.4.1"
}
